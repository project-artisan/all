plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'

    // gcloud
    id "com.google.cloud.tools.jib" version "3.4.2"
}

group = 'kr.drrr'
version = '0.0.1-SNAPSHOT'


jib {
    from {
        image = 'openjdk:21-jdk'
    }
    to {
        String region = System.getenv('REGION')
        String projectId = System.getenv('PROJECT_ID')
        String artifactRegistry = System.getenv('ARTIFACT_REGISTRY')
        String service = System.getenv('SERVICE')
        image = String.format('%s-docker.pkg.dev/%s/%s/%s:latest', region, projectId, artifactRegistry, service)

        auth {
            username = '_json_key'
            password = System.getenv('GOOGLE_AR_CLIENT_SECRET') ?: ''
        }

    }
    container {
        jvmFlags = [
                String.format('-Dspring.profiles.active=%s', "prod"),
                '-Xms1024m',
                '-Xmx1024m'
        ]
    }
}


java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // jwt
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
    implementation 'org.springframework.security:spring-security-oauth2-jose:6.2.4'
    implementation platform("com.google.cloud:spring-cloud-gcp-dependencies:5.3.0")
    implementation "com.google.cloud:spring-cloud-gcp-starter-sql-mysql:5.3.0"

    //스웨거
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // e2e 테스트
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {

    from './be-security'
    include "*"  // 복사할 파일들
    into 'src/main/resources'  // 복사 위치
}